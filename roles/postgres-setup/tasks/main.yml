---

- name: Install postgres
  shell: "{{ bin_path }}/brew install postgresql@{{ postgresversion }}"
  args:
    executable: /bin/bash

- name: Unlink current postgres
  shell: "{{ bin_path}}/brew unlink postgres"
  args:
    executable: /bin/bash
  ignore_errors: yes

- name: Force link to installed version of postgres
  shell: "{{ bin_path }}/brew link postgresql@{{ postgresversion }} --force"
  args:
    executable: /bin/bash

- name: Set PGDATA
  shell: "PGDATA=/usr/local/var/postgresql@{{ postgresversion }} {{ bin_path }}/initdb -U postgres"
  args:
    executable: /bin/bash
  ignore_errors: yes

- name: Start postgres service
  shell: "{{ bin_path }}/brew services start postgresql@9.4"
  args:
    executable: /bin/bash

- name: Set up user trifacta
  shell: "{{ bin_path }}/psql postgres -c 'CREATE USER trifacta SUPERUSER ENCRYPTED PASSWORD 'trifacta';'" 
  args:
    executable: /bin/bash
  ignore_errors: yes

- name: Set up user trifactaactviti
  shell: "{{ bin_path }}/psql postgres -c 'CREATE USER trifactaactiviti SUPERUSER ENCRYPTED PASSWORD 'trifactaactiviti';'"
  args:
    executable: /bin/bash
  ignore_errors: yes


- name: Set up user trifactatimebasedtriggerservice
  shell: "{{ bin_path }}/psql postgres -c 'CREATE USER trifactatimebasedtriggerservice SUPERUSER ENCRYPTED PASSWORD 'trifactatimebasedtriggerservice';'"
  args:
    executable: /bin/bash
  ignore_errors: yes

- name: Set up user trifactaschedulingservice
  shell: "{{ bin_path }}/psql postgres -c 'CREATE USER trifactaschedulingservice SUPERUSER ENCRYPTED PASSWORD 'trifactaschedulingservice';'"
  args:
    executable: /bin/bash
  ignore_errors: yes


- name: Set up user securetokenservice
  shell: "{{ bin_path }}/psql postgres -c 'CREATE USER securetokenservice SUPERUSER ENCRYPTED PASSWORD 'securetokenservice';'"
  args:
    executable: /bin/bash
  ignore_errors: yes
  
